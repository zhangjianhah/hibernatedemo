<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee     http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <display-name>Archetype Created Web Application</display-name>
    <!-- 配置Spring环境 -->
    <context-param>
        <!-- 加载spring的配置文件 -->
        <param-name>contextConfigLocation</param-name>
        <!--  <param-value>classpath:spring/spring-*.xml</param-value>-->
        <param-value>classpath:spring/spring-*.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.js</url-pattern>
        <url-pattern>*.css</url-pattern>
        <url-pattern>*.scss</url-pattern>
        <url-pattern>*.ico</url-pattern>
        <url-pattern>*.woff</url-pattern>
        <url-pattern>*.woff2</url-pattern>
        <url-pattern>*.ttf</url-pattern>
        <url-pattern>*.html</url-pattern>
        <url-pattern>/public/assets/*"</url-pattern>
        <url-pattern>/images/*</url-pattern>
    </servlet-mapping>

    <!-- 字符过滤器 -->
    <filter>
        <filter-name>springfilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>springfilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!-- 解决web端不能put,delete等请求的问题 -->
    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <servlet-name>dispatcherServlet</servlet-name>
    </filter-mapping>


    <!-- 解决put,patch等请求，data数据拿不到的问题 -->
    <filter>
        <filter-name>HttpPutFormContentFilter</filter-name>
        <filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HttpPutFormContentFilter</filter-name>
        <servlet-name>dispatcherServlet</servlet-name>
    </filter-mapping>

    <!--让SPringMVC可以接受put传递的数据并且封装到pojo中-->
    <!--<filter>-->
    <!--<filter-name>HttpPutFormContentFilter</filter-name>-->
    <!--<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>HttpPutFormContentFilter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->


    <!-- 前端控制器  这里用来拦截所有的页面 -->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring/spring-mvc.xml</param-value>
        </init-param>
        <!-- 这是用来配置前端控制器什么时候开始实例化 -->
        <!-- 如果为0或大于0，那么会随着容器启动而启动 -->
        <!-- 如果小于0，那么当第一次请求到来才会启动 -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <!-- 所有请求的进入springmvc -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

</web-app>



