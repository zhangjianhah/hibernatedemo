<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--    扫描基础包下面的所有包，把相关的注解的类注册为bean-->
    <!-- 事务管理要求spring有管理所有bean的权力，而springmvc是管理控制层的，只要扫描controller就好 -->
    <context:component-scan base-package="com.zj.hibernatedemo.controller" />

<!--    注册MVC注解驱动，-->
<!--    如果用springmvc处理包含静态资源，web.xml中servlet-mapping势必捕获所有路径，-->
<!--    这时候不配置该注解，会导致DispatcherServlet请求的是静态资源还是mvc请求-->
    <mvc:annotation-driven />




    <!-- 配置一个视图解析器 : 我们所有的方法返回的字符串 都会应用这个前后缀!!! -->
    <!--ViewResovlver启用。视图解析器 -->
    <!--存放jsp文件的目录位置 prefix:前缀 suffix 后缀 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 文件上传配置 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置编码格式 -->
        <property name="defaultEncoding" value="utf-8"></property>
        <!-- 设置上传文件总大小，单位字节 -->
        <property name="maxUploadSize" value="20971520"></property>
    </bean>

    <!-- 配置拦截器 -->
<!--    <mvc:interceptors>-->
<!--        <mvc:interceptor>-->
<!--            &lt;!&ndash; 拦截所有mvc控制器 &ndash;&gt;-->
<!--            <mvc:mapping path="/**"/>-->
<!--            &lt;!&ndash; mvc:exclude-mapping是另外一种拦截，它可以在你后来的测试中对某个页面进行不拦截，这样就不用在-->
<!--                LoginInterceptor的preHandler方法里面获取不拦截的请求uri地址了(优选) &ndash;&gt;-->
<!--            &lt;!&ndash; 需要注意的是拦截的url必须为uri内容的整体 &ndash;&gt;-->
<!--            <mvc:exclude-mapping path="/login" />-->
<!--            <mvc:exclude-mapping path="/users/login" />-->
<!--            <mvc:exclude-mapping path="/register" />-->
<!--            <mvc:exclude-mapping path="/users" />-->
<!--            <bean class="com.zj.blog.interceptor.LoginInterceptor"></bean>-->
<!--        </mvc:interceptor>-->
<!--    </mvc:interceptors>-->

</beans>